version: 0.2

env:
  variables:
    # This must match the ECR repo you created in Terraform.
    # We recommend injecting it via Terraform:
    #   environment_variable {
    #     name  = "REPO_URI"
    #     value = aws_ecr_repository.app_repo.repository_url
    #   }
    REPO_URI: 123456789012.dkr.ecr.us-east-1.amazonaws.com/expense-tracker-api

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - pip install --upgrade pip
      - pip install -r requirements.txt
      - pip install -e .
      - pip install pytest pytest-asyncio httpx
      # Authenticate Docker to Amazon ECR
      - |
        aws ecr get-login-password --region $AWS_DEFAULT_REGION \
        | docker login --username AWS --password-stdin $REPO_URI

  pre_build:
    commands:
      - echo "[DEBUG_ENV] POSTGRES_PORT=$POSTGRES_PORT"
      - echo "[DEBUG_ENV] POSTGRES_HOST=$POSTGRES_HOST"
      - echo "[DEBUG_ENV] POSTGRES_USER=$POSTGRES_USER"
      - echo "[DEBUG_ENV] POSTGRES_DB=$POSTGRES_DB"
      - |
        docker run -d --name postgres-ci \
          -e POSTGRES_USER=$POSTGRES_USER \
          -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
          -e POSTGRES_DB=$POSTGRES_DB \
          -p 5432:5432 public.ecr.aws/docker/library/postgres:15
        echo "Waiting for Postgres to be readyâ€¦"
        until docker exec postgres-ci pg_isready -U $POSTGRES_USER -d $POSTGRES_DB; do
          sleep 3
        done
        alembic upgrade head

  build:
    commands:
      # 1) Use the Git commit SHA as the image tag
      - IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION}
      # 2) Build and tag the image
      - docker build -t $REPO_URI:$IMAGE_TAG .
      # 3) Push to ECR
      - docker tag $REPO_URI:$IMAGE_TAG $REPO_URI:latest
      - docker push $REPO_URI:$IMAGE_TAG
      - docker push $REPO_URI:latest
      # 4) Prepare the ECS Deploy artifact
      - |
        printf '[{"name":"expense-tracker-api","imageUri":"%s"}]' \
        "$REPO_URI:$IMAGE_TAG" > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
